<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tencent.seventeenShow.backend.dao.UserMapper">
    <resultMap id="userMap" type="User">
        <id property="id" column="id"/>
        <result property="studentId" column="student_id"/>
    </resultMap>
    <!--List<MaterialCategory> getAllCategory();-->
    <!--List<Material> getMaterialByCategoryId(@Param("cid")Long categoryId);-->



    <!--<select id="login" resultMap="baseMap" parameterType="String">-->
        <!--select id,open_id,nick_name,sex,city_id,avatar,phone,real_name,`character`,address,login_name-->
        <!--from `user`-->
        <!--where open_id=#{openId};-->
    <!--</select>-->
    <!--<update id="bindOpenId" parameterType="String">-->
        <!--update `user` set open_id = #{openId} where id = #{userId};-->
    <!--</update>-->

    <!--<update id="unbundingByOpenId" parameterType="String">-->
        <!--update `user` set open_id = null where open_id = #{open_id};-->
    <!--</update>-->



    <insert id="firstLogin" parameterType="String">
        insert into `token_list`(
        accessToken,openId,token,expire,create_time
        )values(
        #{accessToken},#{openId},#{token},#{expire},now()
        )
    </insert>

    <select id="findTokenByOpenId" resultType="Token" parameterType="String">
        select token, expire,accessToken
        from `token_list`
        where openId = #{openId}
    </select>

    <update id="updateToken">
        UPDATE token_list SET token = #{newToken} and SET expire = #{expire} where openId = #{openId}
    </update>

    <update id="upDateExpire">
        UPDATE token_list SET expire = #{expire} where openId = #{openId}
    </update>

    <select id="findOpenIdByToken" resultType="String" parameterType="String">
        select openId
        from `token_list`
        where token = #{token}
    </select>

    <select id="getResume" resultType="User" parameterType="String">
        select mobile, username,loveBalance,diamondBalance,label,avatar,age
        from `user`
        where openId = #{openId}
    </select>


    <select id="getLabel" resultType="Label" parameterType="String">
        select label
        from `user`
        where openId = #{openId}
    </select>



    <!--开始写接口咯-->
    <update id="clickDiamond">
        UPDATE user SET diamondBalance = diamondBalance -1 where openId = #{openId}
    </update>

    <update id="clickLove">
        UPDATE user SET loveBalance = loveBalance + 1 where openId = #{openId}
    </update>

    <update id="clickDislke">
        UPDATE user SET dislikeLeft = dislikeLeft - 1 where openId = #{openId}
    </update>


<!--
    <update id="changeMatch">
        UPDATE match SET openid1 = 1 and result = openid1 + #{openId2} where openId1 = #{openId1} and openId2 = #{openId2}
    </update>


    <update id="changeNotMatch">
        UPDATE match SET openid1 = 0 and result = openid1 + #{openId2} where openId1 = #{openId1} and openId2 = #{openId2}
    </update>

    <select id="isMatch" resultType="int" parameterType="String">
        select result
        from `match`
        where openId1 = #{openId1} and openId2 = #{openId2}
    </select>
-->
    <select id="getFriendInfo" resultType="FriendInfo" parameterType="String">
        select username,label,age,avatar,loveBalance
        from `user`
        where openId = #{openId}
    </select>

    <update id="addDiamond">
        UPDATE user SET diamondBalance = diamondBalance + 5 where openId = #{openId}
    </update>
</mapper>
