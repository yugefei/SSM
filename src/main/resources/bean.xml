<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <mvc:interceptors>

        <!--<mvc:interceptor>-->
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <!--设置所有请求返回content-type 为 application/json-->
            <!--<mvc:mapping path="/**" />-->
            <!--对于个别其他类型,如静态 可使用-->
            <!--<mvc:exclude-mapping path="/**"/>-->
            <!--<bean class="com.tencent.seventeenShow.backend.interceptor.ContentTypeInterceptor" />-->
        <!--</mvc:interceptor>-->
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->


        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <!--<mvc:mapping path="/order/**" />-->
            <!--<mvc:mapping path="/user/logout" />-->
            <!-- <mvc:mapping path="/user/avatar" />-->
            <!--<mvc:mapping path="/user/pwd" />-->

            <mvc:mapping path="/user/notaurl"/>
            <!--<mvc:mapping path="/user/verifyCode/changeMobile"/>-->
            <!--<mvc:mapping path="/record/**" />-->
            <!--<mvc:mapping path="/species/addToCollection"/>-->
            <!--<mvc:mapping path="/species/collection/**"/>-->
            <!--<mvc:mapping path="/record/**"/>-->
            <!--<mvc:mapping path="/feedback/new"/>-->
            <!--<mvc:mapping path="/upload/**"/> -->
            <bean class="com.tencent.seventeenShow.backend.interceptor.AuthInterceptor" />
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
</beans>
